// <auto-generated />
using System;
using HellsGate.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HellsGate.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HellsGate.Models.AccessModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccessTime");

                    b.Property<bool>("GrantedAccess");

                    b.Property<int>("PeopleEntered");

                    b.Property<string>("Plate");

                    b.HasKey("Id");

                    b.ToTable("Access");
                });

            modelBuilder.Entity("HellsGate.Models.CarAnagraphicModel", b =>
                {
                    b.Property<string>("LicencePlate")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastModify");

                    b.Property<int?>("OwnerId");

                    b.HasKey("LicencePlate");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("HellsGate.Models.PeopleAnagraphicModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber");

                    b.Property<DateTime>("LastModify");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("HellsGate.Models.CarAnagraphicModel", b =>
                {
                    b.HasOne("HellsGate.Models.PeopleAnagraphicModel", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("HellsGate.Models.PeopleAnagraphicModel", b =>
                {
                    b.OwnsOne("HellsGate.Models.AutorizationLevelModel", "AutorizationLevel", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("Id")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AuthName");

                            b1.Property<int>("AuthValue");

                            b1.Property<DateTime>("CreationDate");

                            b1.Property<TimeSpan>("Vaidity");

                            b1.ToTable("Peoples");

                            b1.HasOne("HellsGate.Models.PeopleAnagraphicModel")
                                .WithOne("AutorizationLevel")
                                .HasForeignKey("HellsGate.Models.AutorizationLevelModel", "Id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("HellsGate.Models.SafeAuthModel", "SafeAuthModel", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnName("Id");

                            b1.Property<byte[]>("AutSafe");

                            b1.Property<DateTime>("DtIns");

                            b1.Property<byte[]>("UserSafe");

                            b1.ToTable("SafeAuthModels");

                            b1.HasOne("HellsGate.Models.PeopleAnagraphicModel")
                                .WithOne("SafeAuthModel")
                                .HasForeignKey("HellsGate.Models.SafeAuthModel", "Id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
